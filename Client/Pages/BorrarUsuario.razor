@page "/usuario/eliminar/{IdUsuario:int}"
@using CRUDBlazorWASM.Shared;
@inject HttpClient Http;
@inject NavigationManager NavigationManager;

<h2>BorrarUsuario</h2>
<br />
<div class="form-group card">
    <h4>Quieres Eliminar este Usuario?</h4>
    <table class="table">
        <tbody>
            <tr>
                <td>Nombre</td>
                <td>@usuario.Nombre</td>
            </tr>
            <tr>
                <td>Apellido</td>
                <td>@usuario.Apellido</td>
            </tr>
            <tr>
                <td>Telefono</td>
                <td>@usuario.Telefono</td>
            </tr>
            <tr>
                <td>Email</td>
                <td>@usuario.Email</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Borrar" @onclick="(async () => await EliminarUsuario(usuario.IdUsuario))" class="btn btn-danger" />
    <input type="submit" value="Cancelar" @onclick="(() => Cancel())" class="btn btn-warning" />
</div>

@code {
    [Parameter]
    public int IdUsuario { get; set; }
    protected Usuario usuario = new();

    protected override async Task OnParametersSetAsync()
    {
        if (IdUsuario != 0)
        {
            usuario = await Http.GetFromJsonAsync<Usuario>("api/Usuario/" + IdUsuario.ToString());
        }
    }

    protected async Task EliminarUsuario(int IdUsuario)
    {
        await Http.DeleteAsync("api/Usuario/" + IdUsuario);
        Cancel();
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }

}
